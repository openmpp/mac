#!/usr/bin/env bash
#
# build openM++ Go oms web-service and dbcopy utility

# push into ompp root and make log directory if not exist

if [ ! -d ompp ]; then 

  echo mkdir ompp
  
  if ! mkdir ompp; then
    echo FAILED
    exit 1
  fi
fi

pushd ompp

if [ ! -d log ]; then mkdir log; fi

# log build environment 

echo Log file: log/build-go.log
echo `date` Build Go oms web-service and dbcopy utility | tee log/build-go.log 

# build go oms web-service and dbcopy database utility
# do not use unixODBC by defaults, it is required to have dynamic unixODBC.so installed
# if you want to build dbcopy or oms with ODBC then modify commands below:
#   go install -tags odbc go.openmpp.org/dbcopy
#   go install -tags odbc go.openmpp.org/oms

if [ ! -d ompp-go ]; then
  
  if ! git clone https://github.com/openmpp/go ompp-go >> log/build-go.log 2>&1;
  then
    echo FAILED git clone | tee -a log/build-go.log
    exit 1
  fi

else
  echo Skip: git clone
fi

pushd ompp-go

do_go_cmd()
{
  echo go $@ | tee -a ../log/build-go.log
  
  if ! go $@ >> ../log/build-go.log 2>&1;
  then
    echo FAILED. | tee -a ../log/build-go.log
    exit 1
  fi
}

do_go_cmd install -tags sqlite_math_functions,sqlite_omit_load_extension ./dbcopy
do_go_cmd install -tags sqlite_math_functions,sqlite_omit_load_extension ./oms

popd

echo `date` Done. | tee -a log/build-go.log
popd
